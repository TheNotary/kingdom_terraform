_init_keys() {
  mkdir -p keys/ &&
    echo "# put your ~/.ssh/id_rsa.pub keys in here for your team" >> keys/default_authorized_keys &&
    ssh-keygen -t RSA -b 4096 -N '' -f `pwd`/keys/personal-aws_rsa &&
    ssh-keygen -t RSA -b 4096 -N '' -f `pwd`/keys/default-dokku_rsa
}


_before_hook() {
  if [ ! -d "keys/" ]; then
    echo "Could not fild the keys/ folder.  Would you like to have that file automatically populated?"
    echo "(y)/n"
    read -n choice
    if [ "${choice}" == "y" ] || [ -z "${choice}" ]; then
      _init_keys
    else
      echo "Ok, please populate that folder through w/e means you're comfortable, be that either copy/ pasting from other folders, syncing from S3, or something else that's nice."
      echo "exiting"
      exit
    fi
  fi
}



# Usage _expose_get_remote_attribute aws_route53_zone.personal_site
_expose_get_remote_attribute() {
  static_tf_state="-state=static_infrastructure/.tf_state/terraform_prd.tfstate"
  grep_cmd="grep -P \"^$2\W*=\""
  awk_cmd="awk '{ print \$3 }'"

  terraform_cmd="terraform state show ${static_tf_state} $1"
  eval "${terraform_cmd} | ${grep_cmd} | ${awk_cmd}"
}

# Setup ENVs

# This would look ok with a ruby hash...
export TF_VAR_route53_zone_id=$(_expose_get_remote_attribute aws_route53_zone.personal_site id)
export TF_VAR_personal_site_key_id=$(_expose_get_remote_attribute aws_iam_access_key.personal_site id)
export TF_VAR_personal_site_key_secret=$(_expose_get_remote_attribute aws_iam_access_key.personal_site secret)
export TF_VAR_personal_site_bucket=$(_expose_get_remote_attribute aws_s3_bucket.personal_site_data id)
